<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1600.sch" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<Product_Attribute_Definition xmlns="http://pds.nasa.gov/pds4/pds/v1"
 xmlns:pds="http://pds.nasa.gov/pds4/pds/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://pds.nasa.gov/pds4/pds/v1 https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1600.xsd">
 
    <Identification_Area>
        <logical_identifier>urn:nasa:pds:context_pds3:attribute:attribute.file_state</logical_identifier>
        <version_id>1.0</version_id>
        <title>file_state</title>
        <information_model_version>1.6.0.0</information_model_version>
        <product_class>Product_Attribute_Definition</product_class>
        <Modification_History>
            <Modification_Detail>
                <modification_date>2016-10-01</modification_date>
                <version_id>1.0</version_id>
                <description>
                    extracted metadata from PDS3 catalog and
                    modified to comply with PDS4 Information Model
                </description>
            </Modification_Detail>
        </Modification_History>
    </Identification_Area>
    <DD_Attribute_Full>
        <name>file_state</name>
        <version_id>1.0</version_id>
        <class_name>not applicable</class_name>
        <local_identifier>file_state</local_identifier>
        <steward_id>pds</steward_id>
        <type>PDS3</type>
        <namespace_id>PDS</namespace_id>
        <nillable_flag>false</nillable_flag>
        <submitter_name>JOHN HO</submitter_name>
        <definition>
The file_state element indicates whether a cube file possibly contains
potentially corrupted data. Note: This keyword element is derived directly
from the USGS&apos; ISIS software keyword element of the same name. The
following is a direct description of this keyword element from the ISIS
software documentation. : &apos;The I/O for ISIS cube files and table files is
buffered, i.e., part of the data for a file is held in memory and is not
actually written to the file until the file is closed. This improves
processing efficiency. However, when a new file is opened for creation or
an existing file is opened for update (Read/Write) access, the file will
not be properly closed if a system crash occurs or if the program is
aborted (either due to a program malfunction or due to user action). This
results in a possibility that the file contains corrupted data. When this
happens, the FILE_STATE label keyword is set to &apos;DIRTY&apos; and most ISIS
applications normally refuse to process this potentially corrupted data.
 
ISIS includes a keyword called FILE_STATE in every ISIS cube (qube), table,
and Instrument Spectral Library (ISL) data file. This keyword will be set
to either CLEAN or DIRTY. Each time the cube is opened this keyword will be
checked. If the FILE_STATE is equal to CLEAN, then the program will
continue on normally. However, if the FILE_STATE is DIRTY, then the
application will halt with the appropriate error message.
 
When a FILE_STATE becomes DIRTY, it indicates that something has gone wrong
in a previously run application. ISIS will always set the FILE_STATE to
DIRTY when the file is being opened for writing. If the application crashes
and does not close the cube properly the FILE_STATE will remain DIRTY.
 
However, this does not always mean the file is corrupt. To help restore a
file from DIRTY to CLEAN, ISIS has an application called &apos;cleanlab&apos;.
&apos;cleanlab&apos; will modify the FILE_STATE keyword in the label to a CLEAN
state. This program should be used with caution as the contents of the file
may not be valid when an ISIS file is left in a DIRTY state.
        </definition>
        <comment>file_state</comment>
        <registered_by>JOHN HO</registered_by>
        <registration_authority_id>0001_NASA_PDS_1</registration_authority_id>
        <attribute_concept>Unknown</attribute_concept>
        <Terminological_Entry>
            <name>file_state</name>
            <definition>
The file_state element indicates whether a cube file possibly contains
potentially corrupted data. Note: This keyword element is derived directly
from the USGS&apos; ISIS software keyword element of the same name. The
following is a direct description of this keyword element from the ISIS
software documentation. : &apos;The I/O for ISIS cube files and table files is
buffered, i.e., part of the data for a file is held in memory and is not
actually written to the file until the file is closed. This improves
processing efficiency. However, when a new file is opened for creation or
an existing file is opened for update (Read/Write) access, the file will
not be properly closed if a system crash occurs or if the program is
aborted (either due to a program malfunction or due to user action). This
results in a possibility that the file contains corrupted data. When this
happens, the FILE_STATE label keyword is set to &apos;DIRTY&apos; and most ISIS
applications normally refuse to process this potentially corrupted data.
 
ISIS includes a keyword called FILE_STATE in every ISIS cube (qube), table,
and Instrument Spectral Library (ISL) data file. This keyword will be set
to either CLEAN or DIRTY. Each time the cube is opened this keyword will be
checked. If the FILE_STATE is equal to CLEAN, then the program will
continue on normally. However, if the FILE_STATE is DIRTY, then the
application will halt with the appropriate error message.
 
When a FILE_STATE becomes DIRTY, it indicates that something has gone wrong
in a previously run application. ISIS will always set the FILE_STATE to
DIRTY when the file is being opened for writing. If the application crashes
and does not close the cube properly the FILE_STATE will remain DIRTY.
 
However, this does not always mean the file is corrupt. To help restore a
file from DIRTY to CLEAN, ISIS has an application called &apos;cleanlab&apos;.
&apos;cleanlab&apos; will modify the FILE_STATE keyword in the label to a CLEAN
state. This program should be used with caution as the contents of the file
may not be valid when an ISIS file is left in a DIRTY state.
            </definition>
            <language>English</language>
            <preferred_flag>true</preferred_flag>
        </Terminological_Entry>
        <DD_Value_Domain_Full>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <formation_rule>
N/A
</formation_rule>
            <minimum_characters>5</minimum_characters>
            <maximum_characters>5</maximum_characters>
            <minimum_value>TBD_minimum_value</minimum_value>
            <maximum_value>TBD_maximum_value</maximum_value>
            <pattern>TBD_pattern</pattern>
            <unit_of_measure_type>Units_of_None</unit_of_measure_type>
            <conceptual_domain>Short_String</conceptual_domain>
            <specified_unit_id>none</specified_unit_id>
            <DD_Permissible_Value_Full>
                <value>CLEAN</value>
                <value_begin_date>2003-12-15T00:00:00Z</value_begin_date>
                <value_end_date>2029-12-31T00:00:00Z</value_end_date>
            </DD_Permissible_Value_Full>
            <DD_Permissible_Value_Full>
                <value>DIRTY</value>
                <value_begin_date>2003-12-15T00:00:00Z</value_begin_date>
                <value_end_date>2029-12-31T00:00:00Z</value_end_date>
            </DD_Permissible_Value_Full>
        </DD_Value_Domain_Full>
    </DD_Attribute_Full>
</Product_Attribute_Definition>
