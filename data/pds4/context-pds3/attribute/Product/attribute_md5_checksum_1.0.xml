<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1600.sch" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<Product_Attribute_Definition xmlns="http://pds.nasa.gov/pds4/pds/v1"
 xmlns:pds="http://pds.nasa.gov/pds4/pds/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://pds.nasa.gov/pds4/pds/v1 https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1600.xsd">
 
    <Identification_Area>
        <logical_identifier>urn:nasa:pds:context_pds3:attribute:attribute.md5_checksum</logical_identifier>
        <version_id>1.0</version_id>
        <title>md5_checksum</title>
        <information_model_version>1.6.0.0</information_model_version>
        <product_class>Product_Attribute_Definition</product_class>
        <Modification_History>
            <Modification_Detail>
                <modification_date>2016-10-01</modification_date>
                <version_id>1.0</version_id>
                <description>
                    extracted metadata from PDS3 catalog and
                    modified to comply with PDS4 Information Model
                </description>
            </Modification_Detail>
        </Modification_History>
    </Identification_Area>
    <DD_Attribute_Full>
        <name>md5_checksum</name>
        <version_id>1.0</version_id>
        <class_name>not applicable</class_name>
        <local_identifier>md5_checksum</local_identifier>
        <steward_id>pds</steward_id>
        <type>PDS3</type>
        <namespace_id>PDS</namespace_id>
        <nillable_flag>false</nillable_flag>
        <submitter_name>JOHN HO</submitter_name>
        <definition>
   The MD5 algorithm takes as input a file (message) of arbitrary length
   and produces as output a 128-bit &apos;fingerprint&apos; or &apos;message digest&apos; of
   the input. It is conjectured that it is computationally infeasible to
   produce two messages having the same message digest, or to produce
   any message having a given prespecified target message digest. The
   MD5 algorithm is intended for digital signature applications.
 
   The MD5 algorithm is designed to be quite fast on 32-bit machines. In
   addition, the MD5 algorithm does not require any large substitution
   tables; the algorithm can be coded quite compactly.
 
   Most standard MD5 checksum calculators return a 32 character
   hexadecimal value containing lower case letters. In order to
   accomodate this existing standard, the PDS requires that the value
   assigned to the MD5_CHECKSUM keyword be a value composed of lowercase
   letters (a-f) and numbers (0-9). In order to comply with other standards
   relating to the use of lowercase letters in strings, the value must be
   quoted using double quotes.
 
 
   Example:  MD5_CHECKSUM = &apos;0ff0a5dd0f3ea4e104b0eae98c87f36c&apos;
 
   The MD5 algorithm is an extension of the MD4 message-digest algorithm
   1,2]. MD5 is slightly slower than MD4, but is more &apos;conservative&apos; in
   design. MD5 was designed because it was felt that MD4 was perhaps
   being adopted for use more quickly than justified by the existing
   critical review; because MD4 was designed to be exceptionally fast,
   it is &apos;at the edge&apos; in terms of risking successful cryptanalytic
   attack. MD5 backs off a bit, giving up a little in speed for a much
   greater likelihood of ultimate security. It incorporates some
   suggestions made by various reviewers, and contains additional
   optimizations. The MD5 algorithm has been placed in the public domain
   for review and possible adoption as a standard.
 
   For OSI-based applications, MD5&apos;s object identifier is
 
   md5 OBJECT IDENTIFIER ::=
     iso(1) member-body(2) US(840) rsadsi(113549) digestAlgorithm(2) 5}
 
   In the X.509 type AlgorithmIdentifier [3], the parameters for MD5
   should have type NULL.
 
   The MD5 algorithm was described by its inventor, Ron Rivest of
   RSA Data Security, Inc., in an Internet Request For Comments
   document, RFC1321 (document available from the PDS).
 
   References
   ==========
   [1] Rivest, R., The MD4 Message Digest Algorithm, RFC 1320, MIT and
       RSA Data Security, Inc., April 1992.
 
   [2] Rivest, R., The MD4 message digest algorithm, in A.J.  Menezes
       and S.A. Vanstone, editors, Advances in Cryptology - CRYPTO &apos;90
       Proceedings, pages 303-311, Springer-Verlag, 1991.
 
   [3] CCITT Recommendation X.509 (1988), The Directory -
       Authentication Framework.
        </definition>
        <comment>md5checksum</comment>
        <registered_by>JOHN HO</registered_by>
        <registration_authority_id>0001_NASA_PDS_1</registration_authority_id>
        <attribute_concept>Unknown</attribute_concept>
        <Terminological_Entry>
            <name>md5_checksum</name>
            <definition>
   The MD5 algorithm takes as input a file (message) of arbitrary length
   and produces as output a 128-bit &apos;fingerprint&apos; or &apos;message digest&apos; of
   the input. It is conjectured that it is computationally infeasible to
   produce two messages having the same message digest, or to produce
   any message having a given prespecified target message digest. The
   MD5 algorithm is intended for digital signature applications.
 
   The MD5 algorithm is designed to be quite fast on 32-bit machines. In
   addition, the MD5 algorithm does not require any large substitution
   tables; the algorithm can be coded quite compactly.
 
   Most standard MD5 checksum calculators return a 32 character
   hexadecimal value containing lower case letters. In order to
   accomodate this existing standard, the PDS requires that the value
   assigned to the MD5_CHECKSUM keyword be a value composed of lowercase
   letters (a-f) and numbers (0-9). In order to comply with other standards
   relating to the use of lowercase letters in strings, the value must be
   quoted using double quotes.
 
 
   Example:  MD5_CHECKSUM = &apos;0ff0a5dd0f3ea4e104b0eae98c87f36c&apos;
 
   The MD5 algorithm is an extension of the MD4 message-digest algorithm
   1,2]. MD5 is slightly slower than MD4, but is more &apos;conservative&apos; in
   design. MD5 was designed because it was felt that MD4 was perhaps
   being adopted for use more quickly than justified by the existing
   critical review; because MD4 was designed to be exceptionally fast,
   it is &apos;at the edge&apos; in terms of risking successful cryptanalytic
   attack. MD5 backs off a bit, giving up a little in speed for a much
   greater likelihood of ultimate security. It incorporates some
   suggestions made by various reviewers, and contains additional
   optimizations. The MD5 algorithm has been placed in the public domain
   for review and possible adoption as a standard.
 
   For OSI-based applications, MD5&apos;s object identifier is
 
   md5 OBJECT IDENTIFIER ::=
     iso(1) member-body(2) US(840) rsadsi(113549) digestAlgorithm(2) 5}
 
   In the X.509 type AlgorithmIdentifier [3], the parameters for MD5
   should have type NULL.
 
   The MD5 algorithm was described by its inventor, Ron Rivest of
   RSA Data Security, Inc., in an Internet Request For Comments
   document, RFC1321 (document available from the PDS).
 
   References
   ==========
   [1] Rivest, R., The MD4 Message Digest Algorithm, RFC 1320, MIT and
       RSA Data Security, Inc., April 1992.
 
   [2] Rivest, R., The MD4 message digest algorithm, in A.J.  Menezes
       and S.A. Vanstone, editors, Advances in Cryptology - CRYPTO &apos;90
       Proceedings, pages 303-311, Springer-Verlag, 1991.
 
   [3] CCITT Recommendation X.509 (1988), The Directory -
       Authentication Framework.
            </definition>
            <language>English</language>
            <preferred_flag>true</preferred_flag>
        </Terminological_Entry>
        <DD_Value_Domain_Full>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <formation_rule>
NONE
</formation_rule>
            <minimum_characters>32</minimum_characters>
            <maximum_characters>32</maximum_characters>
            <minimum_value>TBD_minimum_value</minimum_value>
            <maximum_value>TBD_maximum_value</maximum_value>
            <pattern>TBD_pattern</pattern>
            <unit_of_measure_type>Units_of_None</unit_of_measure_type>
            <conceptual_domain>Short_String</conceptual_domain>
            <specified_unit_id>none</specified_unit_id>
        </DD_Value_Domain_Full>
    </DD_Attribute_Full>
</Product_Attribute_Definition>
